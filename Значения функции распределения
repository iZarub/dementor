#include<iostream>
#include<vector>
#include<math.h>
#include<fstream>

using std::cin;
using std::cout;
using std::endl;
using std::vector;




int main() {

	std::ofstream resout;
	
	
	resout.open("results.txt");

	int t = 1;
	double G = 0.05;

	vector<double>initial;
	vector<double>value;

	for (int x = 0; x <= 9; x++) {								// запихиваю в отдельный массив начальные значения
		double f = pow(exp(1), (-pow(x, 2) - 5) / 2);
		initial.push_back(f);
	}
	initial.push_back(0);

	for (double& f : initial) {									// выводим начальные условия
		resout << f << " ";
	}
	resout << '\n' << '\n';



	while (t <= 100) {											// пробегаем по 100 у.е. времени с шагом 1 у.е. начиная с 1, заканчивая 100
		for (int i = 0; i < 9; i++) {							// от 0 до 8 значения x считаем значения функции
			value.push_back(initial[i] - G * (initial[i + 1] - initial[i]));
		}
		value.push_back(initial[9] - G * (initial[10] - initial[9])); // для 9 цикл выше сработает неверно, так как конечное значени f(10) = 0
		value.push_back(0); //										// добавляем граничное значение 0 


		for (double& v : value) {									// выводим 11 значений функции для каждого промежутка времени
			resout << v << " " << '\n';
		}
		initial = value;										// пересобираем массив начальных условий для текущего промежутка времени
		value.clear();											// очищаем массив от предыдущих (уже выведенных) значений.
		resout << '\n' << '\n';
		t = t + 1;												// идем дальше по времени
	}
	resout.close();
}
